// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RawRecordContainer.proto

package datawave.ingest.protobuf;

public final class RawRecordContainer {
    private RawRecordContainer() {}

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {}

    public interface DataOrBuilder extends com.google.protobuf.MessageOrBuilder {

        // optional uint64 date = 1;
        /**
         * <code>optional uint64 date = 1;</code>
         *
         * @return if it has date
         */
        boolean hasDate();

        /**
         * <code>optional uint64 date = 1;</code>
         *
         * @return the date
         */
        long getDate();

        // optional string dataType = 2;
        /**
         * <code>optional string dataType = 2;</code>
         *
         * @return if it has data type
         */
        boolean hasDataType();

        /**
         * <code>optional string dataType = 2;</code>
         *
         * @return the data type
         */
        java.lang.String getDataType();

        /**
         * <code>optional string dataType = 2;</code>
         *
         * @return the data type byte string
         */
        com.google.protobuf.ByteString getDataTypeBytes();

        // optional string uid = 3;
        /**
         * <code>optional string uid = 3;</code>
         *
         * @return if it has uid
         */
        boolean hasUid();

        /**
         * <code>optional string uid = 3;</code>
         *
         * @return uid
         */
        java.lang.String getUid();

        /**
         * <code>optional string uid = 3;</code>
         *
         * @return uid byte string
         */
        com.google.protobuf.ByteString getUidBytes();

        // repeated string errors = 4;
        /**
         * <code>repeated string errors = 4;</code>
         *
         * @return list of errors
         */
        java.util.List<java.lang.String> getErrorsList();

        /**
         * <code>repeated string errors = 4;</code>
         *
         * @return number of errors
         */
        int getErrorsCount();

        /**
         * <code>repeated string errors = 4;</code>
         *
         * @param index
         *            the index
         *
         * @return the error at the provided index
         */
        java.lang.String getErrors(int index);

        /**
         * <code>repeated string errors = 4;</code>
         *
         * @param index
         *            the index
         *
         * @return the error byte string at the provided index
         */
        com.google.protobuf.ByteString getErrorsBytes(int index);

        // optional bytes visibility = 5;
        /**
         * <code>optional bytes visibility = 5;</code>
         *
         * @return if it has visibility
         */
        boolean hasVisibility();

        /**
         * <code>optional bytes visibility = 5;</code>
         *
         * @return the visibility
         */
        com.google.protobuf.ByteString getVisibility();

        // optional string rawFileName = 6;
        /**
         * <code>optional string rawFileName = 6;</code>
         *
         * @return if it has raw file name
         */
        boolean hasRawFileName();

        /**
         * <code>optional string rawFileName = 6;</code>
         *
         * @return the raw file name
         */
        java.lang.String getRawFileName();

        /**
         * <code>optional string rawFileName = 6;</code>
         *
         * @return the raw file name byte string
         */
        com.google.protobuf.ByteString getRawFileNameBytes();

        // optional uint64 rawRecordNumber = 7;
        /**
         * <code>optional uint64 rawRecordNumber = 7;</code>
         *
         * @return if it has raw record number
         */
        boolean hasRawRecordNumber();

        /**
         * <code>optional uint64 rawRecordNumber = 7;</code>
         *
         * @return the raw record number
         */
        long getRawRecordNumber();

        // repeated string uuids = 8;
        /**
         * <code>repeated string uuids = 8;</code>
         *
         * @return list of uuids
         */
        java.util.List<java.lang.String> getUuidsList();

        /**
         * <code>repeated string uuids = 8;</code>
         *
         * @return the number of uuids in the list
         */
        int getUuidsCount();

        /**
         * <code>repeated string uuids = 8;</code>
         *
         * @param index
         *            the index
         *
         * @return the uuid at the provided index
         */
        java.lang.String getUuids(int index);

        /**
         * <code>repeated string uuids = 8;</code>
         *
         * @param index
         *            the index
         *
         * @return the uuid byte string at the provided index
         */
        com.google.protobuf.ByteString getUuidsBytes(int index);

        // optional bytes rawData = 9;
        /**
         * <code>optional bytes rawData = 9;</code>
         *
         * @return if it has raw data
         */
        boolean hasRawData();

        /**
         * <code>optional bytes rawData = 9;</code>
         *
         * @return the raw data byte string
         */
        com.google.protobuf.ByteString getRawData();

        // optional bool requiresMasking = 10;
        /**
         * <code>optional bool requiresMasking = 10;</code>
         *
         * @return if has requires masking
         */
        boolean hasRequiresMasking();

        /**
         * <code>optional bool requiresMasking = 10;</code>
         *
         * @return if it requires masking
         */
        boolean getRequiresMasking();

        // optional uint64 rawFileTimeStamp = 11;
        /**
         * <code>optional uint64 rawFileTimeStamp = 11;</code>
         *
         * @return if it has raw file timestamp
         */
        boolean hasRawFileTimeStamp();

        /**
         * <code>optional uint64 rawFileTimeStamp = 11;</code>
         *
         * @return the raw file timestamp
         */
        long getRawFileTimeStamp();
    }

    /**
     * Protobuf type {@code datawave.ingest.protobuf.Data}
     */
    public static final class Data extends com.google.protobuf.GeneratedMessage implements DataOrBuilder {
        // Use Data.newBuilder() to construct.
        private Data(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private Data(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final Data defaultInstance;

        public static Data getDefaultInstance() {
            return defaultInstance;
        }

        public Data getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private Data(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            date_ = input.readUInt64();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            dataType_ = input.readBytes();
                            break;
                        }
                        case 26: {
                            bitField0_ |= 0x00000004;
                            uid_ = input.readBytes();
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                errors_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            errors_.add(input.readBytes());
                            break;
                        }
                        case 42: {
                            bitField0_ |= 0x00000008;
                            visibility_ = input.readBytes();
                            break;
                        }
                        case 50: {
                            bitField0_ |= 0x00000010;
                            rawFileName_ = input.readBytes();
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000020;
                            rawRecordNumber_ = input.readUInt64();
                            break;
                        }
                        case 66: {
                            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                                uuids_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            uuids_.add(input.readBytes());
                            break;
                        }
                        case 74: {
                            bitField0_ |= 0x00000040;
                            rawData_ = input.readBytes();
                            break;
                        }
                        case 80: {
                            bitField0_ |= 0x00000080;
                            requiresMasking_ = input.readBool();
                            break;
                        }
                        case 88: {
                            bitField0_ |= 0x00000100;
                            rawFileTimeStamp_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    errors_ = new com.google.protobuf.UnmodifiableLazyStringList(errors_);
                }
                if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                    uuids_ = new com.google.protobuf.UnmodifiableLazyStringList(uuids_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return datawave.ingest.protobuf.RawRecordContainer.internal_static_datawave_ingest_protobuf_Data_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return datawave.ingest.protobuf.RawRecordContainer.internal_static_datawave_ingest_protobuf_Data_fieldAccessorTable.ensureFieldAccessorsInitialized(
                            datawave.ingest.protobuf.RawRecordContainer.Data.class, datawave.ingest.protobuf.RawRecordContainer.Data.Builder.class);
        }

        public static com.google.protobuf.Parser<Data> PARSER = new com.google.protobuf.AbstractParser<Data>() {
            public Data parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                return new Data(input, extensionRegistry);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Data> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional uint64 date = 1;
        public static final int DATE_FIELD_NUMBER = 1;
        private long date_;

        /**
         * <code>optional uint64 date = 1;</code>
         *
         * @return if it has date
         */
        public boolean hasDate() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional uint64 date = 1;</code>
         *
         * @return the date
         */
        public long getDate() {
            return date_;
        }

        // optional string dataType = 2;
        public static final int DATATYPE_FIELD_NUMBER = 2;
        private java.lang.Object dataType_;

        /**
         * <code>optional string dataType = 2;</code>
         *
         * @return if it has data type
         */
        public boolean hasDataType() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional string dataType = 2;</code>
         *
         * @return the data type
         */
        public java.lang.String getDataType() {
            java.lang.Object ref = dataType_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    dataType_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string dataType = 2;</code>
         *
         * @return the data type byte string
         */
        public com.google.protobuf.ByteString getDataTypeBytes() {
            java.lang.Object ref = dataType_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                dataType_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional string uid = 3;
        public static final int UID_FIELD_NUMBER = 3;
        private java.lang.Object uid_;

        /**
         * <code>optional string uid = 3;</code>
         *
         * @return if it has uid
         */
        public boolean hasUid() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional string uid = 3;</code>
         *
         * @return the uid
         */
        public java.lang.String getUid() {
            java.lang.Object ref = uid_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    uid_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string uid = 3;</code>
         *
         * @return the uid byte string
         */
        public com.google.protobuf.ByteString getUidBytes() {
            java.lang.Object ref = uid_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                uid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // repeated string errors = 4;
        public static final int ERRORS_FIELD_NUMBER = 4;
        private com.google.protobuf.LazyStringList errors_;

        /**
         * <code>repeated string errors = 4;</code>
         *
         * @return the errors list
         */
        public java.util.List<java.lang.String> getErrorsList() {
            return errors_;
        }

        /**
         * <code>repeated string errors = 4;</code>
         *
         * @return the number of errors in the list
         */
        public int getErrorsCount() {
            return errors_.size();
        }

        /**
         * <code>repeated string errors = 4;</code>
         *
         * @param index
         *            the index
         *
         * @return the error at the provided index
         */
        public java.lang.String getErrors(int index) {
            return errors_.get(index);
        }

        /**
         * <code>repeated string errors = 4;</code>
         *
         * @param index
         *            the index
         *
         * @return the error byte string for the provided index
         */
        public com.google.protobuf.ByteString getErrorsBytes(int index) {
            return errors_.getByteString(index);
        }

        // optional bytes visibility = 5;
        public static final int VISIBILITY_FIELD_NUMBER = 5;
        private com.google.protobuf.ByteString visibility_;

        /**
         * <code>optional bytes visibility = 5;</code>
         *
         * @return if it has visibility
         */
        public boolean hasVisibility() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional bytes visibility = 5;</code>
         *
         * @return the visibility byte string
         */
        public com.google.protobuf.ByteString getVisibility() {
            return visibility_;
        }

        // optional string rawFileName = 6;
        public static final int RAWFILENAME_FIELD_NUMBER = 6;
        private java.lang.Object rawFileName_;

        /**
         * <code>optional string rawFileName = 6;</code>
         *
         * @return if it has raw file name
         */
        public boolean hasRawFileName() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional string rawFileName = 6;</code>
         *
         * @return the raw file name
         */
        public java.lang.String getRawFileName() {
            java.lang.Object ref = rawFileName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    rawFileName_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string rawFileName = 6;</code>
         *
         * @return the raw file name byte string
         */
        public com.google.protobuf.ByteString getRawFileNameBytes() {
            java.lang.Object ref = rawFileName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                rawFileName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional uint64 rawRecordNumber = 7;
        public static final int RAWRECORDNUMBER_FIELD_NUMBER = 7;
        private long rawRecordNumber_;

        /**
         * <code>optional uint64 rawRecordNumber = 7;</code>
         *
         * @return if it has raw record number
         */
        public boolean hasRawRecordNumber() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <code>optional uint64 rawRecordNumber = 7;</code>
         *
         * @return the raw record number
         */
        public long getRawRecordNumber() {
            return rawRecordNumber_;
        }

        // repeated string uuids = 8;
        public static final int UUIDS_FIELD_NUMBER = 8;
        private com.google.protobuf.LazyStringList uuids_;

        /**
         * <code>repeated string uuids = 8;</code>
         *
         * @return the uuids list
         */
        public java.util.List<java.lang.String> getUuidsList() {
            return uuids_;
        }

        /**
         * <code>repeated string uuids = 8;</code>
         *
         * @return the number of uuids in the list
         */
        public int getUuidsCount() {
            return uuids_.size();
        }

        /**
         * <code>repeated string uuids = 8;</code>
         *
         * @param index
         *            the index
         *
         * @return the uuid at the provided index
         */
        public java.lang.String getUuids(int index) {
            return uuids_.get(index);
        }

        /**
         * <code>repeated string uuids = 8;</code>
         *
         * @param index
         *            the index
         *
         * @return the uuid byte string at the provided index
         */
        public com.google.protobuf.ByteString getUuidsBytes(int index) {
            return uuids_.getByteString(index);
        }

        // optional bytes rawData = 9;
        public static final int RAWDATA_FIELD_NUMBER = 9;
        private com.google.protobuf.ByteString rawData_;

        /**
         * <code>optional bytes rawData = 9;</code>
         *
         * @return if it has raw data
         */
        public boolean hasRawData() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <code>optional bytes rawData = 9;</code>
         *
         * @return raw data byte string
         */
        public com.google.protobuf.ByteString getRawData() {
            return rawData_;
        }

        // optional bool requiresMasking = 10;
        public static final int REQUIRESMASKING_FIELD_NUMBER = 10;
        private boolean requiresMasking_;

        /**
         * <code>optional bool requiresMasking = 10;</code>
         *
         * @return if it has requires masking bit set
         */
        public boolean hasRequiresMasking() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        /**
         * <code>optional bool requiresMasking = 10;</code>
         *
         * @return if it requires masking
         */
        public boolean getRequiresMasking() {
            return requiresMasking_;
        }

        // optional uint64 rawFileTimeStamp = 11;
        public static final int RAWFILETIMESTAMP_FIELD_NUMBER = 11;
        private long rawFileTimeStamp_;

        /**
         * <code>optional uint64 rawFileTimeStamp = 11;</code>
         *
         * @return if it has raw file timestamp
         */
        public boolean hasRawFileTimeStamp() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
        }

        /**
         * <code>optional uint64 rawFileTimeStamp = 11;</code>
         *
         * @return the raw file timestamp
         */
        public long getRawFileTimeStamp() {
            return rawFileTimeStamp_;
        }

        private void initFields() {
            date_ = 0L;
            dataType_ = "";
            uid_ = "";
            errors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            visibility_ = com.google.protobuf.ByteString.EMPTY;
            rawFileName_ = "";
            rawRecordNumber_ = 0L;
            uuids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            rawData_ = com.google.protobuf.ByteString.EMPTY;
            requiresMasking_ = false;
            rawFileTimeStamp_ = 0L;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1)
                return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt64(1, date_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getDataTypeBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBytes(3, getUidBytes());
            }
            for (int i = 0; i < errors_.size(); i++) {
                output.writeBytes(4, errors_.getByteString(i));
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeBytes(5, visibility_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeBytes(6, getRawFileNameBytes());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeUInt64(7, rawRecordNumber_);
            }
            for (int i = 0; i < uuids_.size(); i++) {
                output.writeBytes(8, uuids_.getByteString(i));
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeBytes(9, rawData_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeBool(10, requiresMasking_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                output.writeUInt64(11, rawFileTimeStamp_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1)
                return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(1, date_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, getDataTypeBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(3, getUidBytes());
            }
            {
                int dataSize = 0;
                for (int i = 0; i < errors_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(errors_.getByteString(i));
                }
                size += dataSize;
                size += 1 * getErrorsList().size();
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(5, visibility_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(6, getRawFileNameBytes());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(7, rawRecordNumber_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < uuids_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(uuids_.getByteString(i));
                }
                size += dataSize;
                size += 1 * getUuidsList().size();
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(9, rawData_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream.computeBoolSize(10, requiresMasking_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                size += com.google.protobuf.CodedOutputStream.computeUInt64Size(11, rawFileTimeStamp_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 1837305830954470331L;

        @java.lang.Override
        protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseFrom(com.google.protobuf.ByteString data)
                        throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseFrom(com.google.protobuf.ByteString data,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseFrom(java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseFrom(java.io.InputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseDelimitedFrom(java.io.InputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static datawave.ingest.protobuf.RawRecordContainer.Data parseFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(datawave.ingest.protobuf.RawRecordContainer.Data prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            return new Builder(parent);
        }

        /**
         * Protobuf type {@code datawave.ingest.protobuf.Data}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder>
                        implements datawave.ingest.protobuf.RawRecordContainer.DataOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return datawave.ingest.protobuf.RawRecordContainer.internal_static_datawave_ingest_protobuf_Data_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return datawave.ingest.protobuf.RawRecordContainer.internal_static_datawave_ingest_protobuf_Data_fieldAccessorTable
                                .ensureFieldAccessorsInitialized(datawave.ingest.protobuf.RawRecordContainer.Data.class,
                                                datawave.ingest.protobuf.RawRecordContainer.Data.Builder.class);
            }

            // Construct using datawave.ingest.protobuf.RawRecordContainer.Data.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {}
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                date_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                dataType_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                uid_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                errors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000008);
                visibility_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000010);
                rawFileName_ = "";
                bitField0_ = (bitField0_ & ~0x00000020);
                rawRecordNumber_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000040);
                uuids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000080);
                rawData_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000100);
                requiresMasking_ = false;
                bitField0_ = (bitField0_ & ~0x00000200);
                rawFileTimeStamp_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000400);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return datawave.ingest.protobuf.RawRecordContainer.internal_static_datawave_ingest_protobuf_Data_descriptor;
            }

            public datawave.ingest.protobuf.RawRecordContainer.Data getDefaultInstanceForType() {
                return datawave.ingest.protobuf.RawRecordContainer.Data.getDefaultInstance();
            }

            public datawave.ingest.protobuf.RawRecordContainer.Data build() {
                datawave.ingest.protobuf.RawRecordContainer.Data result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public datawave.ingest.protobuf.RawRecordContainer.Data buildPartial() {
                datawave.ingest.protobuf.RawRecordContainer.Data result = new datawave.ingest.protobuf.RawRecordContainer.Data(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.date_ = date_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.dataType_ = dataType_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.uid_ = uid_;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    errors_ = new com.google.protobuf.UnmodifiableLazyStringList(errors_);
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.errors_ = errors_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.visibility_ = visibility_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.rawFileName_ = rawFileName_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.rawRecordNumber_ = rawRecordNumber_;
                if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    uuids_ = new com.google.protobuf.UnmodifiableLazyStringList(uuids_);
                    bitField0_ = (bitField0_ & ~0x00000080);
                }
                result.uuids_ = uuids_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.rawData_ = rawData_;
                if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.requiresMasking_ = requiresMasking_;
                if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
                    to_bitField0_ |= 0x00000100;
                }
                result.rawFileTimeStamp_ = rawFileTimeStamp_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof datawave.ingest.protobuf.RawRecordContainer.Data) {
                    return mergeFrom((datawave.ingest.protobuf.RawRecordContainer.Data) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(datawave.ingest.protobuf.RawRecordContainer.Data other) {
                if (other == datawave.ingest.protobuf.RawRecordContainer.Data.getDefaultInstance())
                    return this;
                if (other.hasDate()) {
                    setDate(other.getDate());
                }
                if (other.hasDataType()) {
                    bitField0_ |= 0x00000002;
                    dataType_ = other.dataType_;
                    onChanged();
                }
                if (other.hasUid()) {
                    bitField0_ |= 0x00000004;
                    uid_ = other.uid_;
                    onChanged();
                }
                if (!other.errors_.isEmpty()) {
                    if (errors_.isEmpty()) {
                        errors_ = other.errors_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureErrorsIsMutable();
                        errors_.addAll(other.errors_);
                    }
                    onChanged();
                }
                if (other.hasVisibility()) {
                    setVisibility(other.getVisibility());
                }
                if (other.hasRawFileName()) {
                    bitField0_ |= 0x00000020;
                    rawFileName_ = other.rawFileName_;
                    onChanged();
                }
                if (other.hasRawRecordNumber()) {
                    setRawRecordNumber(other.getRawRecordNumber());
                }
                if (!other.uuids_.isEmpty()) {
                    if (uuids_.isEmpty()) {
                        uuids_ = other.uuids_;
                        bitField0_ = (bitField0_ & ~0x00000080);
                    } else {
                        ensureUuidsIsMutable();
                        uuids_.addAll(other.uuids_);
                    }
                    onChanged();
                }
                if (other.hasRawData()) {
                    setRawData(other.getRawData());
                }
                if (other.hasRequiresMasking()) {
                    setRequiresMasking(other.getRequiresMasking());
                }
                if (other.hasRawFileTimeStamp()) {
                    setRawFileTimeStamp(other.getRawFileTimeStamp());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                datawave.ingest.protobuf.RawRecordContainer.Data parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (datawave.ingest.protobuf.RawRecordContainer.Data) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // optional uint64 date = 1;
            private long date_;

            /**
             * <code>optional uint64 date = 1;</code>
             *
             * @return if it has date
             */
            public boolean hasDate() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional uint64 date = 1;</code>
             *
             * @return the date
             */
            public long getDate() {
                return date_;
            }

            /**
             * <code>optional uint64 date = 1;</code>
             *
             * @param value
             *            the new date value
             *
             * @return builder to set the date to the new value
             */
            public Builder setDate(long value) {
                bitField0_ |= 0x00000001;
                date_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 date = 1;</code>
             *
             * @return builder to clear the date
             */
            public Builder clearDate() {
                bitField0_ = (bitField0_ & ~0x00000001);
                date_ = 0L;
                onChanged();
                return this;
            }

            // optional string dataType = 2;
            private java.lang.Object dataType_ = "";

            /**
             * <code>optional string dataType = 2;</code>
             *
             * @return if it has data type
             */
            public boolean hasDataType() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string dataType = 2;</code>
             *
             * @return the data type
             */
            public java.lang.String getDataType() {
                java.lang.Object ref = dataType_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    dataType_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>optional string dataType = 2;</code>
             *
             * @return the data type byte string
             */
            public com.google.protobuf.ByteString getDataTypeBytes() {
                java.lang.Object ref = dataType_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    dataType_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string dataType = 2;</code>
             *
             * @param value
             *            the new data type
             *
             * @return builder to set the data type to the new value
             */
            public Builder setDataType(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                dataType_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string dataType = 2;</code>
             *
             * @return builder to clear the data type
             */
            public Builder clearDataType() {
                bitField0_ = (bitField0_ & ~0x00000002);
                dataType_ = getDefaultInstance().getDataType();
                onChanged();
                return this;
            }

            /**
             * <code>optional string dataType = 2;</code>
             *
             * @param value
             *            data type byte string
             *
             * @return builder to set data type to new value
             */
            public Builder setDataTypeBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                dataType_ = value;
                onChanged();
                return this;
            }

            // optional string uid = 3;
            private java.lang.Object uid_ = "";

            /**
             * <code>optional string uid = 3;</code>
             *
             * @return if it has uid
             */
            public boolean hasUid() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional string uid = 3;</code>
             *
             * @return the uid
             */
            public java.lang.String getUid() {
                java.lang.Object ref = uid_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    uid_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>optional string uid = 3;</code>
             *
             * @return the uid byte string
             */
            public com.google.protobuf.ByteString getUidBytes() {
                java.lang.Object ref = uid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    uid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string uid = 3;</code>
             *
             * @param value
             *            the new uid value
             *
             * @return builder to set uid to new value
             */
            public Builder setUid(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                uid_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string uid = 3;</code>
             *
             * @return builder to clear the uid
             */
            public Builder clearUid() {
                bitField0_ = (bitField0_ & ~0x00000004);
                uid_ = getDefaultInstance().getUid();
                onChanged();
                return this;
            }

            /**
             * <code>optional string uid = 3;</code>
             *
             * @param value
             *            new uid byte string
             *
             * @return builder to set uid to the provided byte string
             */
            public Builder setUidBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                uid_ = value;
                onChanged();
                return this;
            }

            // repeated string errors = 4;
            private com.google.protobuf.LazyStringList errors_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureErrorsIsMutable() {
                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    errors_ = new com.google.protobuf.LazyStringArrayList(errors_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @return list of errors
             */
            public java.util.List<java.lang.String> getErrorsList() {
                return java.util.Collections.unmodifiableList(errors_);
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @return the number of errors in the list
             */
            public int getErrorsCount() {
                return errors_.size();
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @param index
             *            the index
             *
             * @return the error at the provided index
             */
            public java.lang.String getErrors(int index) {
                return errors_.get(index);
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @param index
             *            the index
             *
             * @return error byte string for provided index
             */
            public com.google.protobuf.ByteString getErrorsBytes(int index) {
                return errors_.getByteString(index);
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @param index
             *            the index
             *
             * @param value
             *            the new error string to add at the provided index
             *
             * @return builder to set the error at the provided index
             */
            public Builder setErrors(int index, java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureErrorsIsMutable();
                errors_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @param value
             *            the new error to add to the list of errors
             *
             * @return builder to add the error to the list
             */
            public Builder addErrors(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureErrorsIsMutable();
                errors_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @param values
             *            iterable of errors to add to the list
             *
             * @return builder to add errors to the list
             */
            public Builder addAllErrors(java.lang.Iterable<java.lang.String> values) {
                ensureErrorsIsMutable();
                super.addAll(values, errors_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @return builder to clear error list
             */
            public Builder clearErrors() {
                errors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string errors = 4;</code>
             *
             * @param value
             *            error byte string to add
             *
             * @return builder to add new error byte string
             */
            public Builder addErrorsBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureErrorsIsMutable();
                errors_.add(value);
                onChanged();
                return this;
            }

            // optional bytes visibility = 5;
            private com.google.protobuf.ByteString visibility_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <code>optional bytes visibility = 5;</code>
             *
             * @return if it has visibility
             */
            public boolean hasVisibility() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional bytes visibility = 5;</code>
             *
             * @return visibility
             */
            public com.google.protobuf.ByteString getVisibility() {
                return visibility_;
            }

            /**
             * <code>optional bytes visibility = 5;</code>
             *
             * @param value
             *            new visibility value
             *
             * @return builder to set visibility
             */
            public Builder setVisibility(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                visibility_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional bytes visibility = 5;</code>
             *
             * @return builder to clear visibility
             */
            public Builder clearVisibility() {
                bitField0_ = (bitField0_ & ~0x00000010);
                visibility_ = getDefaultInstance().getVisibility();
                onChanged();
                return this;
            }

            // optional string rawFileName = 6;
            private java.lang.Object rawFileName_ = "";

            /**
             * <code>optional string rawFileName = 6;</code>
             *
             * @return if it has raw file name
             */
            public boolean hasRawFileName() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <code>optional string rawFileName = 6;</code>
             *
             * @return raw file name
             */
            public java.lang.String getRawFileName() {
                java.lang.Object ref = rawFileName_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    rawFileName_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>optional string rawFileName = 6;</code>
             *
             * @return raw file name byte string
             */
            public com.google.protobuf.ByteString getRawFileNameBytes() {
                java.lang.Object ref = rawFileName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    rawFileName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string rawFileName = 6;</code>
             *
             * @param value
             *            the new raw file name
             *
             * @return builder to set raw file name
             */
            public Builder setRawFileName(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                rawFileName_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string rawFileName = 6;</code>
             *
             * @return builder to clear raw file name
             */
            public Builder clearRawFileName() {
                bitField0_ = (bitField0_ & ~0x00000020);
                rawFileName_ = getDefaultInstance().getRawFileName();
                onChanged();
                return this;
            }

            /**
             * <code>optional string rawFileName = 6;</code>
             *
             * @param value
             *            raw file name byte string
             *
             * @return builder to set raw file name to provided byte string
             */
            public Builder setRawFileNameBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                rawFileName_ = value;
                onChanged();
                return this;
            }

            // optional uint64 rawRecordNumber = 7;
            private long rawRecordNumber_;

            /**
             * <code>optional uint64 rawRecordNumber = 7;</code>
             *
             * @return if it has raw record number
             */
            public boolean hasRawRecordNumber() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <code>optional uint64 rawRecordNumber = 7;</code>
             *
             * @return raw record number
             */
            public long getRawRecordNumber() {
                return rawRecordNumber_;
            }

            /**
             * <code>optional uint64 rawRecordNumber = 7;</code>
             *
             * @param value
             *            the new raw record number
             *
             * @return builder to set raw record number to provided value
             */
            public Builder setRawRecordNumber(long value) {
                bitField0_ |= 0x00000040;
                rawRecordNumber_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 rawRecordNumber = 7;</code>
             *
             * @return builder to clear the raw record number
             */
            public Builder clearRawRecordNumber() {
                bitField0_ = (bitField0_ & ~0x00000040);
                rawRecordNumber_ = 0L;
                onChanged();
                return this;
            }

            // repeated string uuids = 8;
            private com.google.protobuf.LazyStringList uuids_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureUuidsIsMutable() {
                if (!((bitField0_ & 0x00000080) == 0x00000080)) {
                    uuids_ = new com.google.protobuf.LazyStringArrayList(uuids_);
                    bitField0_ |= 0x00000080;
                }
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @return uuids list
             */
            public java.util.List<java.lang.String> getUuidsList() {
                return java.util.Collections.unmodifiableList(uuids_);
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @return size of uuids list
             */
            public int getUuidsCount() {
                return uuids_.size();
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @param index
             *            the index
             *
             * @return the uuid at the provided index
             */
            public java.lang.String getUuids(int index) {
                return uuids_.get(index);
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @param index
             *            the index
             *
             * @return the uuid byte string for the provided index
             */
            public com.google.protobuf.ByteString getUuidsBytes(int index) {
                return uuids_.getByteString(index);
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @param index
             *            the index
             *
             * @param value
             *            the value to replace at the index
             *
             * @return builder to set uuid at the provided index to the provided value
             */
            public Builder setUuids(int index, java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureUuidsIsMutable();
                uuids_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @param value
             *            uuid to add ot the list
             *
             * @return builder to add provided uuid
             */
            public Builder addUuids(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureUuidsIsMutable();
                uuids_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @param values
             *            iterable of uuids to add
             *
             * @return builder to add all provided uuids
             */
            public Builder addAllUuids(java.lang.Iterable<java.lang.String> values) {
                ensureUuidsIsMutable();
                super.addAll(values, uuids_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @return builder to clear uuids
             */
            public Builder clearUuids() {
                uuids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000080);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string uuids = 8;</code>
             *
             * @param value
             *            uuid byte string
             *
             * @return builder to add uuid byte string provided
             */
            public Builder addUuidsBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureUuidsIsMutable();
                uuids_.add(value);
                onChanged();
                return this;
            }

            // optional bytes rawData = 9;
            private com.google.protobuf.ByteString rawData_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <code>optional bytes rawData = 9;</code>
             *
             * @return if it has raw data
             */
            public boolean hasRawData() {
                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            /**
             * <code>optional bytes rawData = 9;</code>
             *
             * @return raw data byte string
             */
            public com.google.protobuf.ByteString getRawData() {
                return rawData_;
            }

            /**
             * <code>optional bytes rawData = 9;</code>
             *
             * @param value
             *            raw data byte string
             *
             * @return builder to set raw data
             */
            public Builder setRawData(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000100;
                rawData_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional bytes rawData = 9;</code>
             *
             * @return builder to clear raw data
             */
            public Builder clearRawData() {
                bitField0_ = (bitField0_ & ~0x00000100);
                rawData_ = getDefaultInstance().getRawData();
                onChanged();
                return this;
            }

            // optional bool requiresMasking = 10;
            private boolean requiresMasking_;

            /**
             * <code>optional bool requiresMasking = 10;</code>
             *
             * @return if it has required masking set
             */
            public boolean hasRequiresMasking() {
                return ((bitField0_ & 0x00000200) == 0x00000200);
            }

            /**
             * <code>optional bool requiresMasking = 10;</code>
             *
             * @return requires masking flag
             */
            public boolean getRequiresMasking() {
                return requiresMasking_;
            }

            /**
             * <code>optional bool requiresMasking = 10;</code>
             *
             * @param value
             *            requires masking flag
             *
             * @return builder to set requires masking flag
             */
            public Builder setRequiresMasking(boolean value) {
                bitField0_ |= 0x00000200;
                requiresMasking_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional bool requiresMasking = 10;</code>
             *
             * @return builder to clear requires masking flag
             */
            public Builder clearRequiresMasking() {
                bitField0_ = (bitField0_ & ~0x00000200);
                requiresMasking_ = false;
                onChanged();
                return this;
            }

            // optional uint64 rawFileTimeStamp = 11;
            private long rawFileTimeStamp_;

            /**
             * <code>optional uint64 rawFileTimeStamp = 11;</code>
             *
             * @return if it has raw file timestamp
             */
            public boolean hasRawFileTimeStamp() {
                return ((bitField0_ & 0x00000400) == 0x00000400);
            }

            /**
             * <code>optional uint64 rawFileTimeStamp = 11;</code>
             *
             * @return raw file timestamp
             */
            public long getRawFileTimeStamp() {
                return rawFileTimeStamp_;
            }

            /**
             * <code>optional uint64 rawFileTimeStamp = 11;</code>
             *
             * @param value
             *            new raw file timestamp
             *
             * @return builder to set raw file timestamp
             */
            public Builder setRawFileTimeStamp(long value) {
                bitField0_ |= 0x00000400;
                rawFileTimeStamp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 rawFileTimeStamp = 11;</code>
             *
             * @return builder to clear raw file timestamp
             */
            public Builder clearRawFileTimeStamp() {
                bitField0_ = (bitField0_ & ~0x00000400);
                rawFileTimeStamp_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:datawave.ingest.protobuf.Data)
        }

        static {
            defaultInstance = new Data(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:datawave.ingest.protobuf.Data)
    }

    private static com.google.protobuf.Descriptors.Descriptor internal_static_datawave_ingest_protobuf_Data_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_datawave_ingest_protobuf_Data_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
    static {
        java.lang.String[] descriptorData = {
                "\n\030RawRecordContainer.proto\022\030datawave.ing" + "est.protobuf\"\330\001\n\004Data\022\014\n\004date\030\001 \001(\004\022\020\n\010d"
                                + "ataType\030\002 \001(\t\022\013\n\003uid\030\003 \001(\t\022\016\n\006errors\030\004 \003"
                                + "(\t\022\022\n\nvisibility\030\005 \001(\014\022\023\n\013rawFileName\030\006 "
                                + "\001(\t\022\027\n\017rawRecordNumber\030\007 \001(\004\022\r\n\005uuids\030\010 "
                                + "\003(\t\022\017\n\007rawData\030\t \001(\014\022\027\n\017requiresMasking\030"
                                + "\n \001(\010\022\030\n\020rawFileTimeStamp\030\013 \001(\004B\034\n\030dataw" + "ave.ingest.protobufH\001"};
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                internal_static_datawave_ingest_protobuf_Data_descriptor = getDescriptor().getMessageTypes().get(0);
                internal_static_datawave_ingest_protobuf_Data_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_datawave_ingest_protobuf_Data_descriptor, new java.lang.String[] {"Date", "DataType", "Uid", "Errors",
                                        "Visibility", "RawFileName", "RawRecordNumber", "Uuids", "RawData", "RequiresMasking", "RawFileTimeStamp",});
                return null;
            }
        };
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[] {},
                        assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
