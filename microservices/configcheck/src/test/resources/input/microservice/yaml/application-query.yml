# This profile should be included by any service which depends on the query starter.  This
# file contains all of the configuration required to use the QueryLogicFactory.
warehouse:
  accumulo:
    zookeepers: '${accumulo.zookeepers}'
    instanceName: '${accumulo.instanceName}'
    username: '${accumulo.username}'
    password: '${accumulo.password}'
  statsd:
    host: localhost
    port: 8125
  tables:
    shard:
      name: 'datawave.shard'
    index:
      name: 'datawave.shardIndex'
    reverseIndex:
      name: 'datawave.shardReverseIndex'
    dateIndex:
      name: 'datawave.dateIndex'
    metadata:
      name: 'datawave.metadata'
    model:
      name: 'datawave.metadata'
    edge:
      name: 'datawave.edge'
  errorTables:
    shard:
      name: "datawave.error_s"
    index:
      name: "datawave.error_i"
    reverseIndex:
      name: "datawave.error_r"
    dateIndex:
      name: ""
    metadata:
      name: "datawave.error_m"
    model:
      name: "datawave.error_m"
  metricTables:
    shard:
      name: "datawave.queryMetrics_s"
    index:
      name: "datawave.queryMetrics_i"
    reverseIndex:
      name: "datawave.queryMetrics_r"
    dateIndex:
      name: ""
    metadata:
      name: "datawave.queryMetrics_m"
    model:
      name: "datawave.queryMetrics_m"
  defaults:
    checkpointable: true
    queryThreads: 100
    indexLookupThreads: 100
    dateIndexThreads: 20
    fullTableScanEnabled: false
    baseIteratorPriority: 100
    maxIndexScanTimeMillis: 31536000000
    eventPerDayThreshold: 40000
    shardsPerDayThreshold: 20
    initialMaxTermThreshold: 2000
    finalMaxTermThreshold: 2000
    maxDepthThreshold: 2000
    maxUnfieldedExpansionThreshold: 50
    maxValueExpansionThreshold: 50
    maxOrExpansionThreshold: 500
    maxOrRangeThreshold: 10
    maxRangesPerRangeIvarator: 5
    maxOrRangeIvarators: 10
    maxOrExpansionFstThreshold: 750
    maxFieldIndexRangeSplit: 16
    maxIvaratorSources: 20
    maxEvaluationPipelines: 16
    maxPipelineCachedResults: 16
    hdfsSiteConfigURLs: 'file://${HADOOP_CONF_DIR:/etc/hadoop/conf}/core-site.xml,file://${HADOOP_CONF_DIR:/etc/hadoop/conf}/hdfs-site.xml'
    ivaratorFstHdfsBaseURIs: "hdfs://${HADOOP_HOST:localhost}:9000/IvaratorCache"
    ivaratorCacheBufferSize: 10000
    ivaratorMaxOpenFiles: 100
    ivaratorCacheScanPersistThreshold: 100000
    ivaratorCacheScanTimeoutMinutes: 60
    modelName: 'DATAWAVE'
    edgeModelName: 'DATAWAVE_EDGE'

datawave:
  metadata:
    all-metadata-auths:
      - PRIVATE,PUBLIC
    type-substitutions:
      "[datawave.data.type.DateType]": "datawave.data.type.RawDateType"

  query:
    parser:
      skipTokenizeUnfieldedFields:
        - "DOMETA"
      tokenizedFields:
        - "CONTENT"
    logic:
      factory:
        enabled: true
        # Uncomment the following line to override the query logic beans to load
        # xmlBeansPath: "classpath:MyTestQueryLogicFactory.xml"

        # The max page size that a user can request.  0 turns off this feature
        maxPageSize: 10000

        # The number of bytes at which a page will be returned, event if the pagesize has not been reached.  0 turns off this feature
        pageByteTrigger: 0
      logics:
        BaseEventQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          accumuloPassword: ${warehouse.accumulo.password}
          tableName: ${warehouse.tables.shard.name}
          dateIndexTableName: ${warehouse.tables.dateIndex.name}
          defaultDateTypeName: "EVENT"
          metadataTableName: ${warehouse.tables.metadata.name}
          indexTableName: ${warehouse.tables.index.name}
          reverseIndexTableName: ${warehouse.tables.reverseIndex.name}
          maxResults: -1
          queryThreads: ${warehouse.defaults.queryThreads}
          indexLookupThreads: ${warehouse.defaults.indexLookupThreads}
          dateIndexThreads: ${warehouse.defaults.dateIndexThreads}
          fullTableScanEnabled: ${warehouse.defaults.fullTableScanEnabled}
          includeDataTypeAsField: false
          disableIndexOnlyDocuments: false
          indexOnlyFilterFunctionsEnabled: false
          includeHierarchyFields: false
          hierarchyFieldOptions:
            "FOO": "BAR"
          baseIteratorPriority: ${warehouse.defaults.baseIteratorPriority}
          maxIndexScanTimeMillis: ${warehouse.defaults.maxIndexScanTimeMillis}
          collapseUids: false
          collapseUidsThreshold: -1
          useEnrichers: true
          contentFieldNames:
            - 'CONTENT'
          realmSuffixExclusionPatterns:
            - '<.*>$'
          minimumSelectivity: .2
          enricherClassNames:
            - 'datawave.query.enrich.DatawaveTermFrequencyEnricher'
          useFilters: false
          filterClassNames:
            - 'foo.bar'
          filterOptions:
            'bar': "foo"
          auditType: "ACTIVE"
          logicDescription: "Retrieve sharded events/documents, leveraging the global index tables as needed"
          eventPerDayThreshold: ${warehouse.defaults.eventPerDayThreshold}
          shardsPerDayThreshold: ${warehouse.defaults.shardsPerDayThreshold}
          initialMaxTermThreshold: ${warehouse.defaults.initialMaxTermThreshold}
          finalMaxTermThreshold: ${warehouse.defaults.finalMaxTermThreshold}
          maxDepthThreshold: ${warehouse.defaults.maxDepthThreshold}
          maxUnfieldedExpansionThreshold: ${warehouse.defaults.maxUnfieldedExpansionThreshold}
          maxValueExpansionThreshold: ${warehouse.defaults.maxValueExpansionThreshold}
          maxOrExpansionThreshold: ${warehouse.defaults.maxOrExpansionThreshold}
          maxOrRangeThreshold: ${warehouse.defaults.maxOrRangeThreshold}
          maxOrExpansionFstThreshold: ${warehouse.defaults.maxOrExpansionFstThreshold}
          maxFieldIndexRangeSplit: ${warehouse.defaults.maxFieldIndexRangeSplit}
          maxIvaratorSources: ${warehouse.defaults.maxIvaratorSources}
          maxEvaluationPipelines: ${warehouse.defaults.maxEvaluationPipelines}
          maxPipelineCachedResults: ${warehouse.defaults.maxPipelineCachedResults}
          hdfsSiteConfigURLs: ${warehouse.defaults.hdfsSiteConfigURLs}
          zookeeperConfig: ${warehouse.accumulo.zookeepers}
          ivaratorCacheDirConfigs:
            - basePathURI: "hdfs://${HADOOP_HOST:localhost}:9000/IvaratorCache"
          ivaratorFstHdfsBaseURIs: ${warehouse.defaults.ivaratorFstHdfsBaseURIs}
          ivaratorCacheBufferSize: ${warehouse.defaults.ivaratorCacheBufferSize}
          ivaratorMaxOpenFiles: ${warehouse.defaults.ivaratorMaxOpenFiles}
          ivaratorCacheScanPersistThreshold: ${warehouse.defaults.ivaratorCacheScanPersistThreshold}
          ivaratorCacheScanTimeoutMinutes: ${warehouse.defaults.ivaratorCacheScanTimeoutMinutes}
          eventQueryDataDecoratorTransformer:
            requestedDecorators:
              - "CSV"
              - "WIKIPEDIA"
            dataDecorators:
              "CSV":
                "EVENT_ID": "https://localhost:8443/DataWave/Query/lookupUUID/EVENT_ID?uuid=@field_value@&amp;parameters=data.decorators:CSV"
                "UUID": "https://localhost:8443/DataWave/Query/lookupUUID/UUID?uuid=@field_value@&amp;parameters=data.decorators:CSV"
                "PARENT_UUID": "https://localhost:8443/DataWave/Query/lookupUUID/PARENT_UUID?uuid=@field_value@&amp;parameters=data.decorators:CSV"
              "WIKIPEDIA":
                "PAGE_ID": "https://localhost:8443/DataWave/Query/lookupUUID/PAGE_ID?uuid=@field_value@&amp;parameters=data.decorators:WIKIPEDIA"
                "PAGE_TITLE": "https://localhost:8443/DataWave/Query/lookupUUID/PAGE_TITLE?uuid=@field_value@&amp;parameters=data.decorators:WIKIPEDIA"
          modelTableName: ${warehouse.tables.model.name}
          modelName: ${warehouse.defaults.modelName}
          querySyntaxParsers:
            JEXL: ""
            LUCENE: "LuceneToJexlQueryParser"
            LUCENE-UUID: "LuceneToJexlUUIDQueryParser"
            TOKENIZED-LUCENE: "TokenizedLuceneToJexlQueryParser"
          sendTimingToStatsd: false
          collectQueryMetrics: true
          logTimingDetails: true
          statsdHost: ${warehouse.statsd.host}
          statsdPort: ${warehouse.statsd.port}
          evaluationOnlyFields: ""
          maxConcurrentTasks: 10
          requiredRoles:
            - "AuthorizedUser"

        EventQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          logicDescription: "Query the sharded event/document schema, leveraging the global index tables as needed"

        ErrorEventQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          logicDescription: "Retrieve events/documents that encountered one or more errors during ingest"
          tableName: ${warehouse.errorTables.shard.name}
          metadataTableName: ${warehouse.errorTables.metadata.name}
          dateIndexTableName: ""
          indexTableName: ${warehouse.errorTables.index.name}
          reverseIndexTableName: ${warehouse.errorTables.reverseIndex.name}
          includeHierarchyFields: false

        DiscoveryQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          tableName: ${warehouse.tables.shard.name}
          indexTableName: ${warehouse.tables.index.name}
          reverseIndexTableName: ${warehouse.tables.reverseIndex.name}
          metadataTableName: ${warehouse.tables.metadata.name}
          modelTableName: ${warehouse.tables.model.name}
          modelName: ${warehouse.defaults.modelName}
          fullTableScanEnabled: ${warehouse.defaults.fullTableScanEnabled}
          allowLeadingWildcard: true
          auditType: "NONE"
          maxResults: -1
          maxWork: -1
          logicDescription: "Discovery query that returns information from the index about the supplied term(s)"

        ErrorDiscoveryQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          tableName: ${warehouse.errorTables.shard.name}
          indexTableName: ${warehouse.errorTables.index.name}
          reverseIndexTableName: ${warehouse.errorTables.reverseIndex.name}
          maxResults: -1
          maxWork: -1
          metadataTableName: ${warehouse.errorTables.metadata.name}
          modelTableName: ${warehouse.errorTables.model.name}
          modelName: ${warehouse.defaults.modelName}
          fullTableScanEnabled: ${warehouse.defaults.fullTableScanEnabled}
          allowLeadingWildcard: true
          auditType: "NONE"
          logicDescription: "Discovery query that returns information from the ingest errors index about the supplied term(s)"

        LuceneUUIDEventQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          logicDescription: "Composite query logic that retrieves records from the event and error tables, based on known UUID fields, ie, those configured via UUIDTypeList in QueryLogicFactory.xml"
          auditType: "NONE"
          eventQuery:
            auditType: "NONE"
            logicDescription: "Lucene query for event/document UUIDs"
            mandatoryQuerySyntax: 
              - "LUCENE-UUID"
            connPoolName: "UUID"
          errorEventQuery:
            auditType: "NONE"
            logicDescription: "Lucene query for event/document UUIDs for events that encountered errors at ingest time"
            mandatoryQuerySyntax: 
              - "LUCENE-UUID"
            connPoolName: "UUID"
            tableName: ${warehouse.errorTables.shard.name}
            dateIndexTableName: ${warehouse.errorTables.dateIndex.name}
            metadataTableName: ${warehouse.errorTables.metadata.name}
            indexTableName: ${warehouse.errorTables.index.name}
            reverseIndexTableName: ${warehouse.errorTables.reverseIndex.name}

        ContentQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          tableName: ${warehouse.tables.shard.name}
          maxResults: -1
          maxWork: -1
          auditType: "NONE"
          logicDescription: "Query that returns a document given the document identifier"

        EdgeQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          tableName: ${warehouse.tables.edge.name}
          metadataTableName: ${warehouse.tables.metadata.name}
          modelTableName: ${warehouse.tables.model.name}
          modelName: ${warehouse.defaults.edgeModelName}
          queryThreads: 16
          auditType: "NONE"
          maxResults: 25000
          maxWork: -1

        CountQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          logicDescription: "Retrieve event/document counts based on your search criteria"

        ErrorCountQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          logicDescription: "Retrieve counts of errored events based on your search criteria"
          tableName: ${warehouse.errorTables.shard.name}
          metadataTableName: ${warehouse.errorTables.metadata.name}
          indexTableName: ${warehouse.errorTables.index.name}
          reverseIndexTableName: ${warehouse.errorTables.reverseIndex.name}

        FieldIndexCountQuery:
          checkpointable: false
          tableName: ${warehouse.tables.shard.name}
          indexTableName: ${warehouse.tables.index.name}
          reverseIndexTableName: ${warehouse.tables.reverseIndex.name}
          metadataTableName: ${warehouse.tables.metadata.name}
          maxResults: -1
          maxWork: -1
          queryThreads: ${warehouse.defaults.queryThreads}
          modelTableName: ${warehouse.tables.model.name}
          modelName: "DATAWAVE"
          maxUniqueValues: 20000
          auditType: "NONE"
          logicDescription: "Indexed Fields Only:  Given FIELDNAME returns counts for each unique value. Given FIELDNAME:FIELDVALUE returns count for only that value."

        ErrorFieldIndexCountQuery:
          checkpointable: false
          tableName: ${warehouse.errorTables.shard.name}
          indexTableName: ${warehouse.errorTables.index.name}
          reverseIndexTableName: ${warehouse.errorTables.reverseIndex.name}
          metadataTableName: ${warehouse.errorTables.metadata.name}
          maxResults: -1
          maxWork: -1
          queryThreads: ${warehouse.defaults.queryThreads}
          modelTableName: ${warehouse.errorTables.model.name}
          modelName: "DATAWAVE"
          maxUniqueValues: 20000
          auditType: "NONE"
          logicDescription: "FieldIndex count query (experimental)"

        TermFrequencyQuery:
          tableName: ${warehouse.tables.shard.name}
          maxResults: -1
          maxWork: -14
          auditType: "NONE"
          logicDescription: "Query that returns data from the term frequency query table"

        IndexStatsQuery:
          auditType: "NONE"

        QueryMetricsQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          logicDescription: "Retrieve query metrics based on the given search term(s)"
          includeHierarchyFields: false
          modelTableName: ${warehouse.metricTables.model.name}
          modelName: "NONE"
          tableName: ${warehouse.metricTables.shard.name}
          dateIndexTableName: ${warehouse.metricTables.dateIndex.name}
          metadataTableName: ${warehouse.metricTables.metadata.name}
          indexTableName: ${warehouse.metricTables.index.name}
          reverseIndexTableName: ${warehouse.metricTables.reverseIndex.name}
          auditType: "NONE"
          collectQueryMetrics: true

        InternalQueryMetricsQuery:
          collectQueryMetrics: false
          requiredRoles:
            - "AuthorizedServer"

        FacetedQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          auditType: "NONE"
          logicDescription: "Faceted search over indexed fields, returning aggregate counts for field values"
          facetedSearchType: "FIELD_VALUE_FACETS"
          facetTableName: "datawave.facets"
          facetMetadataTableName: "datawave.facetMetadata"
          facetHashTableName: "datawave.facetHashes"
          maximumFacetGrouping: 200
          minimumFacet: 1
          streaming: true
          querySyntaxParsers:
            JEXL: ""
            LUCENE: "LuceneToJexlQueryParser"
            LUCENE-UUID: "LuceneToJexlUUIDQueryParser"

        HitHighlights:
          checkpointable: ${warehouse.defaults.checkpointable}
          accumuloPassword: ${warehouse.accumulo.password}
          tableName: ${warehouse.tables.shard.name}
          dateIndexTableName: ${warehouse.tables.dateIndex.name}
          defaultDateTypeName: "EVENT"
          metadataTableName: ${warehouse.tables.metadata.name}
          indexTableName: ${warehouse.tables.index.name}
          reverseIndexTableName: ${warehouse.tables.reverseIndex.name}
          queryThreads: ${warehouse.defaults.indexLookupThreads}
          fullTableScanEnabled: ${warehouse.defaults.fullTableScanEnabled}
          minimumSelectivity: .2
          includeDataTypeAsField: false
          includeGroupingContext: false
          useEnrichers: false
          auditType: "NONE"
          logicDescription: "Fast boolean query over indexed fields, only returning fields queried on"
          eventPerDayThreshold: 40000
          shardsPerDayThreshold: ${warehouse.defaults.shardsPerDayThreshold}
          initialMaxTermThreshold: ${warehouse.defaults.initialMaxTermThreshold}
          finalMaxTermThreshold: ${warehouse.defaults.finalMaxTermThreshold}
          maxDepthThreshold: ${warehouse.defaults.maxDepthThreshold}
          maxUnfieldedExpansionThreshold: ${warehouse.defaults.maxUnfieldedExpansionThreshold}
          maxValueExpansionThreshold: ${warehouse.defaults.maxValueExpansionThreshold}
          maxOrExpansionThreshold: ${warehouse.defaults.maxOrExpansionThreshold}
          maxOrRangeThreshold: ${warehouse.defaults.maxOrRangeThreshold}
          maxRangesPerRangeIvarator: ${warehouse.defaults.maxRangesPerRangeIvarator}
          maxOrRangeIvarators: ${warehouse.defaults.maxOrRangeIvarators}
          maxOrExpansionFstThreshold: ${warehouse.defaults.maxOrExpansionFstThreshold}
          maxFieldIndexRangeSplit: ${warehouse.defaults.maxFieldIndexRangeSplit}
          maxEvaluationPipelines: ${warehouse.defaults.maxEvaluationPipelines}
          maxPipelineCachedResults: ${warehouse.defaults.maxPipelineCachedResults}
          hdfsSiteConfigURLs: ${warehouse.defaults.hdfsSiteConfigURLs}
          zookeeperConfig: ${warehouse.accumulo.zookeepers}
          ivaratorCacheDirConfigs:
            - basePathURI: "hdfs://${HADOOP_HOST:localhost}:9000/IvaratorCache"
          ivaratorFstHdfsBaseURIs: ${warehouse.defaults.ivaratorFstHdfsBaseURIs}
          ivaratorCacheBufferSize: 10000
          ivaratorMaxOpenFiles: ${warehouse.defaults.ivaratorMaxOpenFiles}
          ivaratorCacheScanPersistThreshold: 100000
          ivaratorCacheScanTimeoutMinutes: ${warehouse.defaults.ivaratorCacheScanTimeoutMinutes}
          querySyntaxParsers:
            JEXL: ""
            LUCENE: "LuceneToJexlQueryParser"
            LUCENE-UUID: "LuceneToJexlUUIDQueryParser"

        EdgeEventQuery:
          checkpointable: ${warehouse.defaults.checkpointable}
          logicDescription: "Use results of an EdgeQuery to obtain events/documents that created the given edge"
          edgeModelName: "DATAWAVE_EDGE"
          modelTableName: ${warehouse.tables.model.name}

    uuidTypes: &defaultUuidTypes
      'EVENT_ID':
        fieldName: 'EVENT_ID'
        queryLogic: 'LuceneUUIDEventQuery'
        allowedWildcardAfter: 28
      'UUID':
        fieldName: 'UUID'
        queryLogic: 'LuceneUUIDEventQuery'
      'PARENT_UUID':
        fieldName: 'PARENT_UUID'
        queryLogic: 'LuceneUUIDEventQuery'
      'PAGE_ID':
        fieldName: 'PAGE_ID'
        queryLogic: 'LuceneUUIDEventQuery'
      'PAGE_TITLE':
        fieldName: 'PAGE_TITLE'
        queryLogic: 'LuceneUUIDEventQuery'

    lookup:
      columnVisibility: ""
      beginDate: "20100101 000000.000"
      types: *defaultUuidTypes

    translateid:
      columnVisibility: ""
      beginDate: "20100101 000000.000"
      types: *defaultUuidTypes

    edge:
      # Uncomment the following line to override the edge beans to load
      # xmlBeansPath: "classpath:EdgeBeans.xml"
      model:
        baseFieldMap:
          EDGE_SOURCE: 'SOURCE'
          EDGE_SINK: 'SINK'
          EDGE_TYPE: 'TYPE'
          EDGE_RELATIONSHIP: 'RELATION'
          EDGE_ATTRIBUTE1: 'ATTRIBUTE1'
          EDGE_ATTRIBUTE2: 'ATTRIBUTE2'
          EDGE_ATTRIBUTE3: 'ATTRIBUTE3'
          DATE: 'DATE'
          STATS_EDGE: 'STATS_TYPE'
        keyUtilFieldMap:
          ENRICHMENT_TYPE: 'ENRICHMENT_TYPE'
          FACT_TYPE: 'FACT_TYPE'
          GROUPED_FIELDS: 'GROUPED_FIELDS'
        transformFieldMap:
          COUNT: 'COUNT'
          COUNTS: 'COUNTS'
          LOAD_DATE: 'LOADDATE'
          ACTIVITY_DATE: 'ACTIVITY_DATE'
        fieldMappings:
          - fieldName: "SOURCE"
            modelFieldName: "VERTEXA"
            direction: "REVERSE"
            indexOnly: false
          - fieldName: "SOURCE"
            modelFieldName: "VERTEXA"
            direction: "FORWARD"
            indexOnly: false
          - fieldName: "SINK"
            modelFieldName: "VERTEXB"
            direction: "REVERSE"
            indexOnly: false
          - fieldName: "SINK"
            modelFieldName: "VERTEXB"
            direction: "FORWARD"
            indexOnly: false
          - fieldName: "RELATION"
            modelFieldName: "RELATION"
            direction: "REVERSE"
            indexOnly: false
          - fieldName: "RELATION"
            modelFieldName: "RELATION"
            direction: "FORWARD"
            indexOnly: false
          - fieldName: "TYPE"
            modelFieldName: "TYPE"
            direction: "REVERSE"
            indexOnly: false
          - fieldName: "TYPE"
            modelFieldName: "TYPE"
            direction: "FORWARD"
            indexOnly: false
          - fieldName: "ATTRIBUTE1"
            modelFieldName: "ATTR1"
            direction: "REVERSE"
            indexOnly: false
          - fieldName: "ATTRIBUTE1"
            modelFieldName: "ATTR1"
            direction: "FORWARD"
            indexOnly: false
          - fieldName: "ATTRIBUTE2"
            modelFieldName: "ATTR2"
            direction: "REVERSE"
            indexOnly: false
          - fieldName: "ATTRIBUTE2"
            modelFieldName: "ATTR2"
            direction: "FORWARD"
            indexOnly: false
          - fieldName: "ATTRIBUTE3"
            modelFieldName: "ATTR3"
            direction: "REVERSE"
            indexOnly: false
          - fieldName: "ATTRIBUTE3"
            modelFieldName: "ATTR3"
            direction: "FORWARD"
            indexOnly: false
          